{"version":3,"sources":["utils/uploadAction.js","components/ImageUpload.jsx","utils/isUrl.js","utils/generateQuiz.js","components/Create.jsx","components/Clue.jsx","components/Clues.jsx","components/UrlQuestions.jsx","components/DefaultQuestions.jsx","index.js"],"names":["uploadToImgur","dataUrl","a","data","split","imageBase64","Buffer","from","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","response","json","link","Error","message","error","console","log","uploadAction","file","imageWidth","imageHeight","Promise","resolve","reader","FileReader","onloadend","imageObj","Image","canvas","document","createElement","ctx","getContext","width","height","onload","drawImage","toDataURL","imageUrl","src","result","toString","readAsDataURL","ImageUpload","setClue","rotate","aspect","minZoom","cropperProps","restrictPosition","name","action","listType","showUploadList","PictureOutlined","style","cursor","padding","isUrl","s","test","generateQuiz","fields","form","GoogleForm","addField","JSON","stringify","send","encoded","lzEncode","gameUrl","window","location","origin","Modal","confirm","title","content","target","rel","href","icon","CheckCircleOutlined","color","maskClosable","okText","cancelText","onOk","open","onCancel","clueInput","setShowWarning","remove","field","index","value","getFieldValue","isImage","text","clues","setFieldsValue","label","Item","marginBottom","placeholder","className","onChange","debounce","e","addonBefore","suffix","DeleteOutlined","onClick","paddingBottom","alt","key","CluesInput","List","add","map","type","block","PlusOutlined","LabelAndInput","children","marginLeft","marginRight","span","textAlign","paddingRight","lineHeight","Create","useState","showWarning","Form","useForm","useEffect","onbeforeunload","initialValues","Array","fill","maxWidth","when","layout","onFinish","htmlType","showSideStyle","display","flexDirection","justifyContent","cardCoverStyle","fontSize","cardBodyStyle","background","Clue","show","setShow","image","backgroundImage","backgroundSize","backgroundPosition","isFlipped","bodyStyle","max","Clues","setActiveQuestionIndex","activeQuestionIndex","length","shownClues","setShownClues","setupShow","shown","cluesWithIndex","clue","nextQuestion","setTimeout","success","showAll","gutter","sm","xs","size","wrap","UrlQuestions","encodedQuestion","useParams","question","parse","lzDecode","shuffledClues","arrayShuffle","pop","status","subTitle","extra","to","DefaultQuestions","questions","Footer","Layout","Content","App","minHeight","theme","EditOutlined","PlayCircleOutlined","margin","marginTop","exact","path","render","getElementById"],"mappings":"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","file":"static/js/main.fcea0ffd.chunk.js","sourcesContent":["import { message } from \"antd\";\n\nconst uploadToImgur = async dataUrl => {\n    const data = dataUrl.split(',')[1]\n    const imageBase64 = Buffer.from(data, 'base64');\n\n    try {\n        const response = await fetch('https://api.imgur.com/3/image', {\n            method: 'POST',\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n                'Content-Type': 'text/plain;charset=UTF-8',\n                'Authorization': 'Client-ID 3efda6f1a654717',\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: imageBase64 // body data type must match \"Content-Type\" header\n        });\n        const link = (await response.json()).data.link\n        if (!link) throw Error('Image error')\n\n        return link\n    } catch (error) {\n        message.error('Sorry, something went wrong uploading the image, please try again later.')\n        console.log(error)\n    }\n}\n\nconst uploadAction = (file, { imageWidth, imageHeight }) => new Promise(resolve => {\n    const reader = new FileReader()\n    reader.onloadend = () => {\n        var imageObj = new Image()\n        var canvas = document.createElement('CANVAS')\n\n        var ctx = canvas.getContext('2d')\n        ctx.canvas.width = imageWidth\n        ctx.canvas.height = imageHeight\n\n        imageObj.onload = async () => {\n            ctx.drawImage(imageObj, 0, 0, imageWidth, imageHeight)\n            const dataUrl = canvas.toDataURL()\n            const imageUrl = await uploadToImgur(dataUrl)\n            // setClue(imageUrl)\n            resolve(imageUrl)\n        }\n\n        imageObj.src = reader.result.toString()\n    }\n    reader.readAsDataURL(file)\n})\n\nexport default uploadAction\n","import { Upload } from \"antd\"\nimport { PictureOutlined } from '@ant-design/icons';\nimport ImgCrop from \"antd-img-crop\"\nimport React from \"react\"\nimport uploadAction from \"../utils/uploadAction\"\n\nconst imageWidth = 186 * 3\nconst imageHeight = 100 * 3\n\nconst ImageUpload = ({ setClue }) => (\n    <ImgCrop\n        rotate\n        aspect={imageWidth / imageHeight}\n        minZoom={0.5}\n        cropperProps={{ restrictPosition: false }}\n    >\n        <Upload\n            name='file'\n            action={async file => {\n                const imageUrl = await uploadAction(file, { imageWidth, imageHeight })\n                setClue(imageUrl)\n                return imageUrl\n            }}\n            listType='picture'\n            showUploadList={false}\n        >\n            <PictureOutlined style={{ cursor: 'pointer', padding: '8px 10px' }} />\n        </Upload>\n    </ImgCrop>\n)\n\nexport default ImageUpload\n","const isUrl = s => {\n    const regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/\n    return regexp.test(s);\n}\n\nexport default isUrl\n","import React from \"react\"\nimport { Modal } from \"antd\"\nimport { CheckCircleOutlined } from '@ant-design/icons';\nimport { compressToEncodedURIComponent as lzEncode } from 'lz-string'\nimport GoogleForm from 'google-form-send'\n\nconst generateQuiz = (fields) => {\n    try {\n        const form = new GoogleForm('https://docs.google.com/forms/d/e/1FAIpQLScqzG86l-Cp1LhTFcH_3qhIRMKCNeLglR1tXd6NbRH8bd55Iw')\n        form.addField('entry.1329122340', JSON.stringify(fields))\n        form.send()\n    } catch (error) {\n        // this always errors but google does save the answer\n    }\n\n    const encoded = lzEncode(JSON.stringify(fields))\n\n    console.log(fields)\n    const gameUrl = window.location.origin + process.env.PUBLIC_URL + '/#/play/' + encoded\n\n    Modal.confirm({\n        title: 'Game successfully created',\n        content: (\n            <div>\n                <p>Open this link to play the game</p>\n                <a target='_blank' rel=\"noreferrer\" href={gameUrl}>{gameUrl}</a>\n            </div>\n        ),\n        icon: <CheckCircleOutlined style={{ color: '#52c41a' }} />,\n        maskClosable: true,\n        okText: 'Play Game',\n        cancelText: 'Close',\n        onOk() {\n            window.open(gameUrl, \"_blank\")\n        },\n        onCancel() { }\n    });\n}\n\nexport default generateQuiz\n","import React, { useEffect, useState } from \"react\"\nimport { Form, Input, Button, Col, Row } from \"antd\"\nimport { DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport debounce from 'lodash.debounce'\nimport { Prompt } from \"react-router-dom\";\n\nimport ImageUpload from \"./ImageUpload\";\nimport isUrl from \"../utils/isUrl\";\nimport generateQuiz from \"../utils/generateQuiz\";\n\nconst clueInput = ({ form, setShowWarning, remove }) => (field, index) => {\n    const value = form.getFieldValue('clues')[index]\n    const isImage = isUrl(value)\n\n    const setClue = text => {\n        setShowWarning(true)\n        console.log('setClue')\n        const clues = form.getFieldValue('clues')\n\n        clues[index] = text\n\n        form.setFieldsValue({\n            clues,\n        })\n    }\n\n    return (\n        <div key={field.key}>\n            <LabelAndInput label={index + 1 + ':'}>\n                <Form.Item {...field} style={{ marginBottom: '8px' }} >\n                    <Input\n                        placeholder=\"Clue\"\n                        className='clue-input'\n                        onChange={debounce((e) => setClue(e.target.value), 300)}\n                        addonBefore={<ImageUpload setClue={setClue} />}\n                        suffix={\n                            <DeleteOutlined style={{ color: '#F66' }} onClick={() => remove(field.name)} />\n                        } />\n                </Form.Item>\n            </LabelAndInput>\n            {isImage && (<LabelAndInput>\n                <img\n                    src={value}\n                    style={{ paddingBottom: '10px', width: '186px' }}\n                    alt={`clue ${index + 1}`}\n                />\n            </LabelAndInput>)}\n        </div>\n    )\n}\n\nconst CluesInput = ({ form, setShowWarning }) => (\n    <Form.List name=\"clues\">\n        {(fields, { add, remove }) => (\n            <>\n                {fields.map(clueInput({ form, setShowWarning, remove }))}\n                <LabelAndInput>\n                    <Form.Item>\n                        <Button\n                            type=\"dashed\"\n                            onClick={() => add()}\n                            block icon={<PlusOutlined />}\n                        >\n                            Add Clue\n                        </Button>\n                    </Form.Item>\n                </LabelAndInput>\n            </>\n        )}\n    </Form.List>\n)\n\nconst LabelAndInput = ({ label = null, children }) => (\n    <Row style={{ marginLeft: '10px', marginRight: '20px' }}>\n        <Col span={8} style={{ textAlign: 'right', paddingRight: '10px', lineHeight: '32px' }}>{label}</Col>\n        <Col span={24 - 8}>{children}</Col>\n    </Row>\n)\n\nconst Create = () => {\n    const [showWarning, setShowWarning] = useState(false)\n    const [form] = Form.useForm();\n\n    useEffect(() => {\n        window.onbeforeunload = () => 'Are you sure you want to leave, this page will be reset.'\n    }, [])\n\n    const initialValues = Array(12).fill(\"\")\n\n    return (\n        <div style={{ maxWidth: '500px' }}>\n            <Prompt\n                when={showWarning}\n                message={() => 'Are you sure you want to leave, this page will be reset.'}\n            />\n            <Form\n                form={form}\n                layout='horizontal'\n                initialValues={{ clues: initialValues }}\n                onFinish={generateQuiz}\n            >\n                <LabelAndInput label=\"Answer:\">\n                    <Form.Item name='answer'>\n                        <Input placeholder=\"The connection\" />\n                    </Form.Item>\n                </LabelAndInput>\n                <CluesInput form={form} setShowWarning={setShowWarning} />\n                <LabelAndInput>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">Generate</Button>\n                    </Form.Item>\n                </LabelAndInput>\n            </Form>\n        </div>\n    )\n}\nexport default Create\n","import React from \"react\"\nimport { Card } from \"antd\"\nimport Textfit from 'react-textfit'\nimport ReactCardFlip from \"react-card-flip\"\nimport isUrl from \"../utils/isUrl\"\n\n/** @type {React.CSSProperties} */\nconst showSideStyle = {\n    padding: '5px',\n    height: '100px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    cursor: 'pointer',\n}\n\n/** @type {React.CSSProperties} */\nconst cardCoverStyle = {\n    textAlign: 'center',\n    fontSize: '30px',\n    height: '100px',\n    cursor: 'pointer',\n}\n\n/** @type {React.CSSProperties} */\nconst cardBodyStyle = {\n    height: '100px',\n    padding: '24px 0px',\n    color: 'white',\n    background: '#3a3d3e',\n}\n\nconst Clue = ({ text, index, show, setShow }) => {\n    const isImage = isUrl(text)\n\n    const image = isImage ? { backgroundImage: `url(${text})`, backgroundSize: 'cover', backgroundPosition: 'center' } : {}\n    return (\n        <ReactCardFlip isFlipped={show}>\n            <Card\n                style={cardCoverStyle}\n                bodyStyle={cardBodyStyle}\n                onClick={() => setShow(true)}\n            >{index + 1}</Card>\n            <Card\n                style={{ textAlign: 'center', height: '100px' }}\n                bodyStyle={{ ...image, ...showSideStyle }}\n                onClick={() => setShow(false)}\n            >{!isImage && <Textfit mode=\"single\" max={30}>{text}</Textfit>}</Card>\n        </ReactCardFlip >\n    )\n}\n\nexport default Clue\n","import React, { useState } from \"react\"\nimport { Button, Col, message, Row, Space } from \"antd\"\nimport Clue from \"./Clue\"\n\nconst Clues = ({ clues, setActiveQuestionIndex = null, activeQuestionIndex = null }) => {\n    const [shownClues, setShownClues] = useState(Array.from({ length: 12 }, () => false))\n\n    const setupShow = (index) => (shown) => {\n        shownClues[index] = shown\n        setShownClues([...shownClues])\n    }\n\n    const cluesWithIndex = clues.map((clue, index) => ({ clue, index }))\n\n    const nextQuestion = async () => {\n        setShownClues(Array.from({ length: 12 }, () => false))\n        await new Promise(resolve => setTimeout(resolve, 600))\n        if (activeQuestionIndex !== 0 && setActiveQuestionIndex) {\n            setActiveQuestionIndex(activeQuestionIndex - 1)\n        } else {\n            message.success(`That's all folks`);\n        }\n    }\n\n    const showAll = show => setShownClues(Array(12).fill(show))\n\n    return <div style={{ maxWidth: '800px', width: '100%' }}>\n        <Row gutter={[16, 16]}>\n            {cluesWithIndex.map(({ clue, index }) => (\n                <Col key={index} sm={6} xs={8}>\n                    <Clue text={clue} index={index} show={shownClues[index]} setShow={setupShow(index)} />\n                </Col>\n            ))}\n        </Row>\n        <Space size={[8, 8]} wrap>\n            <Button onClick={() => showAll(true)}>Reveal All</Button>\n            <Button onClick={() => showAll(false)}>Hide All</Button>\n            <Button onClick={nextQuestion}>Next Question</Button>\n        </Space>\n    </div>\n}\n\nexport default Clues\n","import { useParams, Link } from 'react-router-dom'\nimport { decompressFromEncodedURIComponent as lzDecode } from 'lz-string'\nimport React from 'react'\nimport { Button, Result } from 'antd'\nimport arrayShuffle from 'array-shuffle'\nimport Clues from './Clues'\n\nconst UrlQuestions = () => {\n    /** @type {{encodedQuestion: string}}*/\n    const { encodedQuestion } = useParams()\n\n    let clues\n\n    try {\n        const question = JSON.parse(lzDecode(encodedQuestion))\n\n        const shuffledClues = arrayShuffle(question.clues)\n\n\n        while (shuffledClues.length > 12) {\n            shuffledClues.pop()\n        }\n\n        clues = shuffledClues\n    } catch (error) {\n        console.log(error)\n        return <Result\n            status=\"error\"\n            title=\"Sorry, the URL is invalid\"\n            subTitle=\"Please check the URL has been copied correctly.\"\n            extra={<>\n                <Link to='/create' type=\"primary\">\n                    <Button type='primary'>Create a new question</Button>\n                </Link>\n                <Link to='/'><Button>Play sample questions</Button></Link>\n            </>}\n        />\n    }\n\n    return <Clues clues={clues} />\n}\n\nexport default UrlQuestions\n","import arrayShuffle from \"array-shuffle\";\nimport React, { useState } from \"react\";\n\nimport Clues from \"./Clues\";\nimport questions from '../questions.json'\n\n\nconst DefaultQuestions = () => {\n    const [activeQuestionIndex, setActiveQuestionIndex] = useState(questions.length - 1);\n\n    const clues = arrayShuffle(questions[activeQuestionIndex].Clues)\n\n    while (clues.length > 12) {\n        clues.pop()\n    }\n\n    return <Clues clues={clues} activeQuestionIndex={activeQuestionIndex} setActiveQuestionIndex={setActiveQuestionIndex} />\n}\n\nexport default DefaultQuestions\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Layout, Menu } from 'antd';\nimport { Route, Switch, HashRouter as Router, Link } from 'react-router-dom'\nimport { PlayCircleOutlined, EditOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nimport Create from './components/Create';\nimport UrlQuestions from './components/UrlQuestions';\nimport DefaultQuestions from './components/DefaultQuestions';\n\nconst { Footer, Content } = Layout;\n\nconst App = () => (\n  <Layout style={{ minHeight: \"100vh\" }}>\n    <Router>\n      <Menu theme=\"dark\" mode=\"horizontal\">\n        <Menu.Item icon={<EditOutlined />}><Link to='/create'>Create your own questions</Link></Menu.Item>\n        <Menu.Item icon={<PlayCircleOutlined />}><Link to='/'>Play example questions</Link></Menu.Item>\n      </Menu>\n      <Content style={{ maxWidth: '800px', width: '100%', margin: 'auto', marginTop: '100px' }}>\n        <Switch>\n          <Route exact path='/'>\n            <DefaultQuestions />\n          </Route>\n          <Route exact path='/create'><Create /></Route>\n          <Route path='/play/:encodedQuestion'>\n            <UrlQuestions />\n          </Route>\n        </Switch>\n      </Content>\n    </Router>\n    <Footer style={{ textAlign: 'center' }}>Connections ©2021 Created by <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/tomgb/\">Tom Banister</a></Footer>\n  </Layout >\n)\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}